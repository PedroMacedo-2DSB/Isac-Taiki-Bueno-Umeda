 import React from 'react';
import { 
  View, 
  Text, 
  Image, 
  StyleSheet, 
  TouchableOpacity 
} from 'react-native';

// O nome do componente deve ser em PascalCase, como no reposit√≥rio
const ProfileCard = () => {
  // 1. Defini√ß√£o dos dados do componente
  const data = {
    name: 'Ann Lovefully',
    title: 'Designer, amante de gatos, leitora, f√£ de torta de ma√ß√£ e entusiasta da natureza :)',
    location: 'Hungary',
    followers: '8.100',
    following: '3.650',
    // URLs de imagem (use um link real ou imagem local com 'require')
    coverImageUrl: 'https://picsum.photos/400/120?random=2', 
    avatarUrl: 'https://i.pravatar.cc/150?img=4', 
  };

  // 2. Fun√ß√µes de Manipula√ß√£o de Eventos
  const handleFollowPress = () => {
    console.log('Bot√£o Follow Pressionado');
    alert(`Come√ßou a seguir ${data.name}`);
  };
  
  const handleEmailPress = () => {
    console.log('Bot√£o E-mail Pressionado');
    alert('Fun√ß√£o de enviar e-mail ativada.');
  };

  // 3. Estrutura de Retorno (JSX)
  return (
    <View style={styles.cardContainer}>
      {/* √Årea da Capa e Avatar */}
      <View style={styles.coverArea}>
        <Image 
          source={{ uri: data.coverImageUrl }} 
          style={styles.coverImage} 
        />
        <Image 
          source={{ uri: data.avatarUrl }} 
          style={styles.avatarImage} 
        />
      </View>

      {/* Conte√∫do Principal */}
      <View style={styles.contentArea}>
        <Text style={styles.nameText}>{data.name}</Text>
        <Text style={styles.titleText}>{data.title}</Text>

        {/* Informa√ß√µes de Contato (Localiza√ß√£o / E-mail) */}
        <View style={styles.contactRow}>
          {/* Localiza√ß√£o */}
          <View style={styles.contactItem}>
            <Text style={styles.iconSimples}>üìç</Text>
            <Text style={styles.contactText}>{data.location}</Text>
          </View>
          {/* E-mail (bot√£o toc√°vel) */}
          <TouchableOpacity style={styles.contactItem} onPress={handleEmailPress}>
            <Text style={styles.iconSimples}>‚úâÔ∏è</Text> 
            <Text style={[styles.contactText, styles.emailText]}>
              Enviar E-mail
            </Text>
          </TouchableOpacity>
        </View>

        {/* Se√ß√£o de Estat√≠sticas (Followers/Following) */}
        <View style={styles.statSection}>
          {/* Stat Item: Followers */}
          <View style={styles.statItem}>
            <Text style={styles.statNumber}>{data.followers}</Text>
            <Text style={styles.statLabel}>Followers</Text>
          </View>
          {/* Stat Item: Following */}
          <View style={styles.statItem}>
            <Text style={styles.statNumber}>{data.following}</Text>
            <Text style={styles.statLabel}>Following</Text>
          </View>
        </View>

        {/* Bot√£o Principal */}
        <TouchableOpacity 
          style={styles.followButton} 
          onPress={handleFollowPress}
        >
          <Text style={styles.buttonText}>
            Follow
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

// 4. Estilos (StyleSheet.create) - como visto no reposit√≥rio de refer√™ncia
const styles = StyleSheet.create({
  cardContainer: {
    backgroundColor: '#FFFFFF', // Fundo branco do cart√£o
    borderRadius: 10,
    marginHorizontal: 20, 
    marginTop: 50,
    elevation: 3, // Sombra Android
    shadowColor: '#000', // Sombra iOS
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    overflow: 'hidden', // Recorta a imagem de capa e avatar na borda
  },
  
  // --- √Årea da Capa e Avatar ---
  coverArea: {
    height: 120, 
    position: 'relative',
  },
  coverImage: {
    width: '100%',
    height: '100%',
    resizeMode: 'cover',
  },
  avatarImage: {
    width: 100,
    height: 100,
    borderRadius: 50, 
    borderWidth: 4,
    borderColor: '#FFFFFF',
    position: 'absolute',
    bottom: -50, 
    left: '50%',
    marginLeft: -50, // Centraliza
  },
  
  // --- √Årea de Conte√∫do ---
  contentArea: {
    padding: 20,
    paddingTop: 60, // Espa√ßo extra para o avatar
    alignItems: 'center', // Centraliza o texto
  },
  nameText: {
    fontSize: 22,
    fontWeight: 'bold',
    marginBottom: 5,
    color: '#333333',
  },
  titleText: {
    fontSize: 14,
    color: '#777777',
    textAlign: 'center',
    marginBottom: 20,
  },

  // --- Linha de Contato ---
  contactRow: {
    flexDirection: 'row',
    justifyContent: 'center',
    marginVertical: 15,
  },
  contactItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginHorizontal: 10, 
  },
  iconSimples: {
    fontSize: 14,
    marginRight: 5,
  },
  contactText: {
    fontSize: 14,
    color: '#777777',
  },
  emailText: {
    color: '#3498db', // Cor de link
  },

  // --- Se√ß√£o de Estat√≠sticas ---
  statSection: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    width: '100%',
    borderTopWidth: 1,
    borderTopColor: '#EEEEEE',
    paddingVertical: 15,
    marginBottom: 20,
  },
  statItem: {
    alignItems: 'center',
    paddingHorizontal: 15,
  },
  statNumber: {
    fontWeight: 'bold',
    fontSize: 18,
    color: '#333333',
  },
  statLabel: {
    fontSize: 12,
    color: '#777777',
    marginTop: 2,
  },

  // --- Bot√£o Principal ---
  followButton: {
    width: '100%',
    paddingVertical: 12,
    backgroundColor: '#2ecc71', // Cor verde de destaque
    borderRadius: 5,
    alignItems: 'center',
  },
  buttonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  },
});

export default ProfileCard;
